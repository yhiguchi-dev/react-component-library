services:
  loadbalancer:
    build: ./loadbalancer
    container_name: loadbalancer
    ports:
      - 8080:80
  servlet-app:
    build:
      context: ./application
      dockerfile: Dockerfile.servlet
    container_name: servlet-app
    ports:
      - 8081:8080
    environment:
      - DB_HOST=purchase-db
      - DB_PORT=5432
      - DB_NAME=purchase
      - DB_USER=purchase
      - DB_PASSWORD=password
      - REDIS_HOST=purchase-session
      - REDIS_PORT=6379
      - REDIS_PASSWORD=purchase
    depends_on:
      - flyway
      - session-storage
      - loadbalancer
  spring-boot-app:
    build:
      context: ./application
      dockerfile: Dockerfile.springboot
    container_name: spring-boot-app
    ports:
      - 8082:8080
    environment:
      - DB_HOST=purchase-db
      - DB_PORT=5432
      - DB_NAME=purchase
      - DB_USER=purchase
      - DB_PASSWORD=password
      - REDIS_HOST=purchase-session
      - REDIS_PORT=6379
      - REDIS_PASSWORD=purchase
    depends_on:
      - flyway
      - session-storage
      - loadbalancer
  database:
    image: postgres:15.1
    container_name: purchase-db
    environment:
      - POSTGRES_USER=purchase
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=purchase
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
  session-storage:
    image: redis:7.0.5
    container_name: purchase-session
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
  flyway:
    build: ./database
    environment:
      - FLYWAY_URL=jdbc:postgresql://purchase-db/purchase
      - FLYWAY_USER=purchase
      - FLYWAY_PASSWORD=password
      - FLYWAY_CONNECT_RETRIES=60
      - FLYWAY_CLEAN_DISABLED=false
      - FLYWAY_BASELINE_VERSION=0.0.0
#    command: clean migrate
    command: migrate
    depends_on:
      - database
volumes:
  postgres_volume:
  redis_volume: